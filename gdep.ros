#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

(asdf:initialize-source-registry
 '(:source-registry
   ;; TODO: change this directory:
   (:directory #p"~/Programs/git-install/")
   :inherit-configuration))
(setf asdf:*central-registry*
      (append (list (merge-pathnames #p"~/Programs/git-install/"))
	      asdf:*central-registry*))
(ql:quickload "gdep" :silent t)

(defpackage :gdep/ros
  (:use :cl :gdep/all :iterate :gdep/command))

(in-package :gdep/ros)

(defun print-full-help (&optional (stream *standard-output*))
  (format stream "Welcome to gdep version 0.0.1!~%")
  (format stream "A utiltiy for managing programs locally installed from source.~%")
  (format stream "~%Usage: gdep [options...] commmand [arguments...]~%~%")
  (print-available-commands)
  (format stream "~%")
  (format stream "Receive more details about a command with~%~6Tgdep help [command]~%~%"))

(defcommand help (location want-info &rest args)
    ("Print this help text" :more-info '("Usage: gdep help [command]~%"
					 "get detailed infomation on how to use [command]"))
  (declare (ignore args location))
  (cond
    (want-info (unless (print-info-text (first want-info))
		 (format t "~A ~A~%" (cl-ansi-text:red "Unrecognized command:")
			 want-info)
		 (uiop:quit 22)))
    (t (print-full-help))))



;; as of August 2018, the terminfo lisp package doesn't support 32 bit terminfo files,
;; so we must try to use the old versions:
;; TODO: update for new a future version of terminfo
(defun fix-term-name (name)
  (cl-ppcre:register-groups-bind (fixed) ("([a-z]*)-*" name)
    (or fixed name)))

(defun term-colorable-p ()
  (and (interactive-stream-p *standard-input*)
       (member :max-colors (terminfo:capabilities
			    (terminfo:set-terminal (fix-term-name (uiop:getenv "TERM")))))))

(defun main (&rest argv)
  ;; do some setup with colors:
  (if (term-colorable-p)
      (setf cl-ansi-text:*enabled* t)
      (setf cl-ansi-text:*enabled* nil))
  ;; check system install status:
  (gdep/data-init:data-dir-init)
  ;; figure out what the user wants:
  (let* ((first (car argv))
	 (func (get-command-func first)))
    (cond
      ((functionp func)
       (funcall func *default-pathname-defaults* (cdr argv)))
      (t
       (format t (cl-ansi-text:red (format nil "~&Unknown command: ~S~%"
	       (if (symbolp first)
    		   ""
    		   first))))
       (help *default-pathname-defaults* (cdr argv))
       ;; return "invalid argument"
       (uiop:quit 22)))))
;;; vim: set ft=lisp lisp:
